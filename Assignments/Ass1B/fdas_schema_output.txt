SQL> 
SQL> DROP TABLE assessor CASCADE CONSTRAINTS;

Table ASSESSOR dropped.

SQL> 
SQL> DROP TABLE building CASCADE CONSTRAINTS;

Table BUILDING dropped.

SQL> 
SQL> DROP TABLE building_damage CASCADE CONSTRAINTS;

Table BUILDING_DAMAGE dropped.

SQL> 
SQL> DROP TABLE building_history CASCADE CONSTRAINTS;

Table BUILDING_HISTORY dropped.

SQL> 
SQL> DROP TABLE fire_caused CASCADE CONSTRAINTS;

Table FIRE_CAUSED dropped.

SQL> 
SQL> DROP TABLE fire_event CASCADE CONSTRAINTS;

Table FIRE_EVENT dropped.

SQL> 
SQL> DROP TABLE insurance CASCADE CONSTRAINTS;

Table INSURANCE dropped.

SQL> 
SQL> DROP TABLE lga CASCADE CONSTRAINTS;

Table LGA dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE property CASCADE CONSTRAINTS;

Table PROPERTY dropped.

SQL> 
SQL> DROP TABLE property_type CASCADE CONSTRAINTS;

Table PROPERTY_TYPE dropped.

SQL> 
SQL> DROP TABLE visit_date CASCADE CONSTRAINTS;

Table VISIT_DATE dropped.

SQL> 
SQL> DROP TABLE work_history CASCADE CONSTRAINTS;

Table WORK_HISTORY dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE assessor (
  2      assessor_id     NUMBER(7) NOT NULL,
  3      assessor_phone  CHAR(10),
  4      assessor_fname  VARCHAR2(50) NOT NULL,
  5      assessor_lname  VARCHAR2(50),
  6      insurance_code  NUMBER(7) NOT NULL
  7  );

Table ASSESSOR created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_id IS
  2      'id number for assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_phone IS
  2      'phone number for the assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_fname IS
  2      'first name of the assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_lname IS
  2      'last name of the assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.insurance_code IS
  2      'id for insurance company';

Comment created.

SQL> 
SQL> ALTER TABLE assessor ADD CONSTRAINT assessor_pk PRIMARY KEY ( assessor_id );

Table ASSESSOR altered.

SQL> 
SQL> CREATE TABLE building (
  2      building_no      NUMBER(7) NOT NULL,
  3      building_size    VARCHAR2(50) NOT NULL,
  4      building_permit  VARCHAR2(50),
  5      property_id      NUMBER(7) NOT NULL,
  6      building_status  CHAR(1)
  7  );

Table BUILDING created.

SQL> 
SQL> ALTER TABLE building
  2      ADD CONSTRAINT chk_buildingstatus CHECK ( building_status IN ( 'D',
  3                                                                     'O',
  4                                                                     'R' ) );

Table BUILDING altered.

SQL> 
SQL> COMMENT ON COLUMN building.building_no IS
  2      'id for building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_size IS
  2      'size of a building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_permit IS
  2      'class of a building (type)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.property_id IS
  2      'id for property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_status IS
  2      'whether the building is destroyed , repaired, or original.';

Comment created.

SQL> 
SQL> ALTER TABLE building ADD CONSTRAINT building_pk PRIMARY KEY ( building_no,
  2                                                                property_id );

Table BUILDING altered.

SQL> 
SQL> CREATE TABLE building_damage (
  2      damage_cost         VARCHAR2(50) DEFAULT '0' NOT NULL,
  3      totally_destroyed   CHAR(1) DEFAULT 'N' NOT NULL,
  4      insurance_coverage  CHAR(1) NOT NULL,
  5      building_no         NUMBER(7) NOT NULL,
  6      property_id         NUMBER(7) NOT NULL,
  7      fevent_id           NUMBER(7) NOT NULL,
  8      lga_building_value  VARCHAR2(50) NOT NULL,
  9      lga_code            NUMBER(7) NOT NULL
 10  );

Table BUILDING_DAMAGE created.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT chk_tdestroyed CHECK ( totally_destroyed IN ( 'N',
  3                                                                   'Y' ) );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT chk_insurancecov CHECK ( insurance_coverage IN ( 'N',
  3                                                                      'Y' ) );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> COMMENT ON COLUMN building_damage.damage_cost IS
  2      'damage cost to the building caused by fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.totally_destroyed IS
  2      'is the building totally destroyed (Y/N)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.insurance_coverage IS
  2      'is the building insured (Y/N)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.building_no IS
  2      'id for building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.property_id IS
  2      'id for property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.fevent_id IS
  2      'id for the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.lga_building_value IS
  2      'building value according to lga';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_damage.lga_code IS
  2      'ID for lga';

Comment created.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT building_damage_pk PRIMARY KEY ( building_no,
  3                                                      property_id,
  4                                                      fevent_id );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> CREATE TABLE building_history (
  2      oldbuilding_no  NUMBER(7) NOT NULL,
  3      building_no     NUMBER(7) NOT NULL,
  4      property_id     NUMBER(7) NOT NULL
  5  );

Table BUILDING_HISTORY created.

SQL> 
SQL> COMMENT ON COLUMN building_history.oldbuilding_no IS
  2      'previoud building number before rebuild';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_history.building_no IS
  2      'id for building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building_history.property_id IS
  2      'id for property';

Comment created.

SQL> 
SQL> ALTER TABLE building_history ADD CONSTRAINT building_history_pk PRIMARY KEY ( building_no,
  2                                                                                property_id );

Table BUILDING_HISTORY altered.

SQL> 
SQL> CREATE TABLE fire_caused (
  2      event_caused  VARCHAR2(50) NOT NULL,
  3      fevent_id     NUMBER(7) NOT NULL
  4  );

Table FIRE_CAUSED created.

SQL> 
SQL> COMMENT ON COLUMN fire_caused.event_caused IS
  2      'fire event that was caused by this particular fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_caused.fevent_id IS
  2      'id for the fire event';

Comment created.

SQL> 
SQL> ALTER TABLE fire_caused ADD CONSTRAINT fire_cause_pk PRIMARY KEY ( fevent_id );

Table FIRE_CAUSED altered.

SQL> 
SQL> CREATE TABLE fire_event (
  2      fevent_id          NUMBER(7) NOT NULL,
  3      fevent_name        VARCHAR2(50) NOT NULL,
  4      fevent_date        DATE NOT NULL,
  5      fevent_latitude    VARCHAR2(50) NOT NULL,
  6      fevent_longtitude  VARCHAR2(50) NOT NULL,
  7      fevent_area        VARCHAR2(50) DEFAULT '0' NOT NULL,
  8      fevent_livelost    VARCHAR2(50) DEFAULT '0' NOT NULL,
  9      fevent_tdamage     VARCHAR2(50) DEFAULT '0'
 10  );

Table FIRE_EVENT created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_id IS
  2      'id for the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_name IS
  2      'name of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_date IS
  2      'date when the fire event happened';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_latitude IS
  2      'latitude of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_longtitude IS
  2      'longtitude of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_area IS
  2      'the size of area affected by the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_livelost IS
  2      'fatalities of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fevent_tdamage IS
  2      'total damage caused by the fire event';

Comment created.

SQL> 
SQL> ALTER TABLE fire_event ADD CONSTRAINT fire_event_pk PRIMARY KEY ( fevent_id );

Table FIRE_EVENT altered.

SQL> 
SQL> CREATE TABLE insurance (
  2      insurance_code   NUMBER(7) NOT NULL,
  3      insurance_name   VARCHAR2(50) NOT NULL,
  4      insurance_phone  CHAR(10)
  5  );

Table INSURANCE created.

SQL> 
SQL> COMMENT ON COLUMN insurance.insurance_code IS
  2      'id for insurance company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN insurance.insurance_name IS
  2      'insurance company name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN insurance.insurance_phone IS
  2      'phone number for insurance company';

Comment created.

SQL> 
SQL> ALTER TABLE insurance ADD CONSTRAINT insurance_pk PRIMARY KEY ( insurance_code );

Table INSURANCE altered.

SQL> 
SQL> CREATE TABLE lga (
  2      lga_code   NUMBER(7) NOT NULL,
  3      lga_name   VARCHAR2(50) NOT NULL,
  4      lga_ceo    VARCHAR2(50) NOT NULL,
  5      lga_size   NUMBER(7) NOT NULL,
  6      lga_phone  CHAR(10) NOT NULL,
  7      fevent_id  NUMBER(7)
  8  );

Table LGA created.

SQL> 
SQL> COMMENT ON COLUMN lga.lga_code IS
  2      'ID for lga';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN lga.lga_name IS
  2      'name of an lga';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN lga.lga_ceo IS
  2      'the name of the ceo';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN lga.lga_size IS
  2      'area size of an lga';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN lga.lga_phone IS
  2      'phone number of an lga';

Comment created.

SQL> 
SQL> ALTER TABLE lga ADD CONSTRAINT lga_pk PRIMARY KEY ( lga_code );

Table LGA altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_id     NUMBER(7) NOT NULL,
  3      owner_name   VARCHAR2(50) NOT NULL,
  4      owner_phone  CHAR(10) NOT NULL
  5  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_id IS
  2      'id for owner';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_name IS
  2      'owner name (person, organisation, etc)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_phone IS
  2      'contact number for owner';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE property (
  2      property_id        NUMBER(7) NOT NULL,
  3      property_street    VARCHAR2(50) NOT NULL,
  4      property_town      VARCHAR2(50) NOT NULL,
  5      property_postcode  CHAR(10) NOT NULL,
  6      ptytype_id         NUMBER(7) NOT NULL,
  7      owner_id           NUMBER(7) NOT NULL,
  8      lga_code           NUMBER(7) NOT NULL
  9  );

Table PROPERTY created.

SQL> 
SQL> COMMENT ON COLUMN property.property_id IS
  2      'id for property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.property_street IS
  2      'street name of the property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.property_town IS
  2      'town name of the property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.property_postcode IS
  2      'postcode of the property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.ptytype_id IS
  2      'id for property type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.owner_id IS
  2      'id for owner';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.lga_code IS
  2      'ID for lga';

Comment created.

SQL> 
SQL> ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( property_id );

Table PROPERTY altered.

SQL> 
SQL> CREATE TABLE property_type (
  2      ptytype_id    NUMBER(7) NOT NULL,
  3      ptytype_name  VARCHAR2(50) NOT NULL
  4  );

Table PROPERTY_TYPE created.

SQL> 
SQL> COMMENT ON COLUMN property_type.ptytype_id IS
  2      'id for property type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property_type.ptytype_name IS
  2      'name of the property type';

Comment created.

SQL> 
SQL> ALTER TABLE property_type ADD CONSTRAINT property_type_pk PRIMARY KEY ( ptytype_id );

Table PROPERTY_TYPE altered.

SQL> 
SQL> CREATE TABLE visit_date (
  2      assessor_id    NUMBER(7) NOT NULL,
  3      date_visitted  DATE NOT NULL,
  4      date_departed  DATE NOT NULL,
  5      building_no    NUMBER(7) NOT NULL,
  6      property_id    NUMBER(7) NOT NULL,
  7      fevent_id      NUMBER(7) NOT NULL
  8  );

Table VISIT_DATE created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.assessor_id IS
  2      'id number for assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.date_visitted IS
  2      'date the assessor visits the building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.date_departed IS
  2      'date the assessor finished the visit ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.building_no IS
  2      'id for building';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.property_id IS
  2      'id for property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit_date.fevent_id IS
  2      'id for the fire event';

Comment created.

SQL> 
SQL> ALTER TABLE visit_date
  2      ADD CONSTRAINT visit_report_pk PRIMARY KEY ( date_visitted,
  3                                                   building_no,
  4                                                   property_id,
  5                                                   fevent_id );

Table VISIT_DATE altered.

SQL> 
SQL> CREATE TABLE work_history (
  2      work_startdate  DATE NOT NULL,
  3      work_leftdate   DATE NOT NULL,
  4      assessor_id     NUMBER(7) NOT NULL,
  5      insurance_code  NUMBER(7) NOT NULL,
  6      workhistory_no  NUMBER(7) NOT NULL
  7  );

Table WORK_HISTORY created.

SQL> 
SQL> COMMENT ON COLUMN work_history.work_startdate IS
  2      'date the assessor started working for the company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN work_history.work_leftdate IS
  2      'date when the assessor left the company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN work_history.assessor_id IS
  2      'id number for assessor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN work_history.insurance_code IS
  2      'id for insurance company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN work_history.workhistory_no IS
  2      'surrogate key for work history';

Comment created.

SQL> 
SQL> ALTER TABLE work_history ADD CONSTRAINT work_history_pk PRIMARY KEY ( workhistory_no );

Table WORK_HISTORY altered.

SQL> 
SQL> ALTER TABLE work_history
  2      ADD CONSTRAINT work_history_nk UNIQUE ( work_startdate,
  3                                              assessor_id,
  4                                              insurance_code );

Table WORK_HISTORY altered.

SQL> 
SQL> ALTER TABLE visit_date
  2      ADD CONSTRAINT assessor_visitreport FOREIGN KEY ( assessor_id )
  3          REFERENCES assessor ( assessor_id );

Table VISIT_DATE altered.

SQL> 
SQL> ALTER TABLE work_history
  2      ADD CONSTRAINT assessor_workhistory FOREIGN KEY ( assessor_id )
  3          REFERENCES assessor ( assessor_id );

Table WORK_HISTORY altered.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT building_blddamage FOREIGN KEY ( building_no,
  3                                                      property_id )
  4          REFERENCES building ( building_no,
  5                                property_id );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> ALTER TABLE visit_date
  2      ADD CONSTRAINT buildingdamage_visitdate FOREIGN KEY ( building_no,
  3                                                            property_id,
  4                                                            fevent_id )
  5          REFERENCES building_damage ( building_no,
  6                                       property_id,
  7                                       fevent_id );

Table VISIT_DATE altered.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT fireevent_damage FOREIGN KEY ( fevent_id )
  3          REFERENCES fire_event ( fevent_id );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> ALTER TABLE fire_caused
  2      ADD CONSTRAINT fireevent_firecause FOREIGN KEY ( fevent_id )
  3          REFERENCES fire_event ( fevent_id );

Table FIRE_CAUSED altered.

SQL> 
SQL> ALTER TABLE lga
  2      ADD CONSTRAINT fireevent_lga FOREIGN KEY ( fevent_id )
  3          REFERENCES fire_event ( fevent_id );

Table LGA altered.

SQL> 
SQL> ALTER TABLE assessor
  2      ADD CONSTRAINT insurance_assessor FOREIGN KEY ( insurance_code )
  3          REFERENCES insurance ( insurance_code );

Table ASSESSOR altered.

SQL> 
SQL> ALTER TABLE work_history
  2      ADD CONSTRAINT insurance_workhistory FOREIGN KEY ( insurance_code )
  3          REFERENCES insurance ( insurance_code );

Table WORK_HISTORY altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT lga_property FOREIGN KEY ( lga_code )
  3          REFERENCES lga ( lga_code );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT owner_property FOREIGN KEY ( owner_id )
  3          REFERENCES owner ( owner_id );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE building
  2      ADD CONSTRAINT property_building FOREIGN KEY ( property_id )
  3          REFERENCES property ( property_id );

Table BUILDING altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT ptytype_property FOREIGN KEY ( ptytype_id )
  3          REFERENCES property_type ( ptytype_id );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE building_history
  2      ADD CONSTRAINT relation_19 FOREIGN KEY ( building_no,
  3                                               property_id )
  4          REFERENCES building ( building_no,
  5                                property_id );

Table BUILDING_HISTORY altered.

SQL> 
SQL> ALTER TABLE building_damage
  2      ADD CONSTRAINT relation_22 FOREIGN KEY ( lga_code )
  3          REFERENCES lga ( lga_code );

Table BUILDING_DAMAGE altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            13
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             32
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> SPOOL off
